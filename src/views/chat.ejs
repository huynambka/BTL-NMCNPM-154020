<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat Room</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome for icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f7f9fc;
    }
    .chat-container {
      max-width: 800px;
      margin: 20px auto;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-direction: column;
    }
    .chat-header {
      background: #007bff;
      color: white;
      padding: 15px;
      text-align: center;
      border-radius: 8px 8px 0 0;
    }
    .chat-messages {
      height: 400px;
      overflow-y: auto;
      padding: 15px;
      border-bottom: 1px solid #ddd;
      flex: 1;
    }
    .chat-message {
      margin-bottom: 10px;
      display: flex;
      flex-direction: column;
    }
    .chat-message.sender {
      align-items: flex-end;
    }
    .chat-message.receiver {
      align-items: flex-start;
    }
    .chat-message .content {
      padding: 10px 15px;
      border-radius: 20px;
      max-width: 70%;
    }
    .chat-message.sender .content {
      background-color: #007bff;
      color: white;
    }
    .chat-message.receiver .content {
      background-color: #e9ecef;
      color: #333;
    }
    .chat-input {
      padding: 15px;
      display: flex;
      gap: 10px;
      align-items: center;
    }
    .chat-input input {
      flex: 1;
    }
  </style>
</head>
<body>
  <div class="chat-container">
    <!-- Header -->
    <div class="chat-header">
      <h5><i class="fas fa-comments"></i> Chat Room</h5>
      <p class="text-white-50">Room ID: <%= roomID %></p>
    </div>

    <!-- Chat Messages -->
    <div class="chat-messages" id="chat-messages">
      <% messages.forEach((message) => { %>
        <div class="chat-message <%= (message.senderType === 'User' && isCompany) || (message.senderType === 'Company' && !isCompany) ? 'receiver' : 'sender' %>">
          <div class="content">
            <p><%= message.content %></p>
            <small class="text-muted"><%= new Date(message.createdAt).toLocaleString() %></small>
          </div>
        </div>
      <% }) %>
    </div>

    <!-- Chat Input -->
    <form id="chat-form" class="chat-input">
      <input type="text" id="message-input" class="form-control" placeholder="Type a message" required>
      <button type="submit" class="btn btn-primary">
        <i class="fas fa-paper-plane"></i> Send
      </button>
    </form>
  </div>

  <!-- Socket.IO -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    
    const roomID = "<%= roomID %>";
    const userType = "<%= isCompany ? 'Company' : 'User' %>";
    const userID = "<%=  (messages[0]?.userID._id || '')  %>";
    const companyID = "<%=  (messages[0]?.userID._id || '')  %>";
    // Khởi tạo socket
    const socket = io();

    // Tham gia room chat
    socket.emit('joinRoom', roomID);

    // Xử lý sự kiện nhận tin nhắn
    socket.on('receiveMessage', (message) => {
      const chatMessages = document.getElementById('chat-messages');
      console.log('New message:', message);
      // Tạo element tin nhắn mới
      const messageElement = document.createElement('div');
      messageElement.classList.add('chat-message');
      messageElement.classList.add(
        (message.senderType === 'User' && userType === 'Company') || 
        (message.senderType === 'Company' && userType === 'User') ? 'receiver' : 'sender'
      );

      messageElement.innerHTML = `
        <div class="content">
          <p>${message.content}</p>
          <small class="text-muted">${new Date(message.createdAt).toLocaleString()}</small>
        </div>
      `;

      chatMessages.appendChild(messageElement);
      chatMessages.scrollTop = chatMessages.scrollHeight; // Tự động cuộn xuống cuối
    });

    // Gửi tin nhắn qua Socket.IO
    document.getElementById('chat-form').addEventListener('submit', (e) => {
      e.preventDefault();

      const content = document.getElementById('message-input').value.trim();
      if (!content) return;

      const messageData = {
        senderType: userType,
        userID: userID || null,
        companyID: companyID || null,
        content,
        roomID
      };
      // Gửi tin nhắn qua Socket.IO
      socket.emit('sendMessage', messageData);

      // Xóa nội dung input
      document.getElementById('message-input').value = '';
    });
    
  </script>
</body>
</html>
